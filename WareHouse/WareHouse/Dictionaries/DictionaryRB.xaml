<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WareHouse.Dictionaries"
                    xmlns:Custom="http://wpfcontrols.com/">
    <ControlTemplate x:Key="RBStyle" TargetType="{x:Type RadioButton}">
        <Grid>
            <Border BorderBrush="#F45B63" BorderThickness="3,0,0,0">
                <Grid>
                    <Rectangle Height="16" Width="16" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="24,0,0,0">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="/Resources/IconArrow.png" Stretch="Uniform"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <ContentPresenter Margin="0,0,18,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
    <Style x:Key="RBStyleMenuLeft" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <!--<Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>-->
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FF0C1224"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF1B2133"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="#F45B63" BorderThickness="3,0,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="70"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="radioButtonBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="24,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid x:Name="markGrid" Margin="2">
                                        <Rectangle x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" Width="16" Height="16" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Rectangle Fill="#03000000"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    
    <Style x:Key="SuggestionItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="ContentBorder" Background="{Binding SuggestionBackground, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Custom:AutoCompleteTextBox}, Mode=FindAncestor}}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="ContentBorder">
                                <Setter.Value>
                                    <Static/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <Static/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="IsSelected" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="ContentBorder">
                                <Setter.Value>
                                    <Static/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <Static/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TransparentTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Null/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="true" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AutoCompleteTextBoxStyle1" TargetType="{x:Type Custom:AutoCompleteTextBox}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter>
            <Setter.Value>
                <Null/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:AutoCompleteTextBox}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                        <Grid>
                            <DockPanel>
                                <ContentPresenter x:Name="PART_Icon" ContentSource="Icon" Visibility="{TemplateBinding IconVisibility}"/>
                                <Grid>
                                    <TextBlock x:Name="PART_Watermark" Focusable="false" Foreground="Gray" HorizontalAlignment="Left" Margin="3,0" Text="{TemplateBinding Watermark}" VerticalAlignment="Center" Visibility="Collapsed"/>
                                    <TextBox x:Name="PART_Editor" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Stretch" Style="{StaticResource TransparentTextBoxStyle}" Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                </Grid>
                            </DockPanel>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="0" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" MinHeight="25" MaxHeight="600" PopupAnimation="Slide" Width="{TemplateBinding ActualWidth}">
                                <Border Background="White" BorderThickness="1" BorderBrush="Gray" CornerRadius="5" Padding="2">
                                    <Grid>
                                        <ListBox x:Name="PART_Selector" BorderThickness="0" Focusable="false" ItemContainerStyle="{StaticResource SuggestionItemStyle}" ItemTemplate="{TemplateBinding ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" MaxHeight="{Binding MaxPopupHeight, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                        <Border Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                            <ContentPresenter ContentSource="LoadingContent"/>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" SourceName="PART_Editor" Value="">
                            <Setter Property="Visibility" TargetName="PART_Watermark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Left">
                            <Setter TargetName="PART_Icon" Value="Left"/>
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Right">
                            <Setter TargetName="PART_Icon" Value="Right"/>
                        </Trigger>
                        <Trigger Value="true">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="AutoCompleteTextBoxStyle1" TargetType="{x:Type Custom:AutoCompleteTextBox}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:AutoCompleteTextBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3">
                        <Grid>
                            <DockPanel>
                                <ContentPresenter x:Name="PART_Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Visibility="{TemplateBinding IconVisibility}"/>
                                <Grid>
                                    <TextBlock x:Name="PART_Watermark" Foreground="Gray" Focusable="False" HorizontalAlignment="Left" Margin="3,0" Text="{TemplateBinding Watermark}" Visibility="Collapsed" VerticalAlignment="Center"/>
                                    <TextBox x:Name="PART_Editor" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" CaretBrush="#F45B63">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                            <Grid>
                                                                <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Grid>
                            </DockPanel>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="0" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="600" MinHeight="25" PopupAnimation="Slide" Width="{TemplateBinding ActualWidth}">
                                <Border BorderBrush="Gray" BorderThickness="1" Background="White" CornerRadius="5" Padding="2">
                                    <Grid>
                                        <ListBox x:Name="PART_Selector" BorderThickness="0" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemTemplate="{TemplateBinding ItemTemplate}" MaxHeight="{Binding MaxPopupHeight, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <Border x:Name="ContentBorder" Background="{Binding SuggestionBackground, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:AutoCompleteTextBox}}}">
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="ContentBorder" Value="#FF0078D7"/>
                                                                        <Setter Property="Foreground" Value="White"/>
                                                                        <Setter Property="IsSelected" Value="True"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsSelected" Value="True">
                                                                        <Setter Property="Background" TargetName="ContentBorder" Value="#FF0078D7"/>
                                                                        <Setter Property="Foreground" Value="White"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                        </ListBox>
                                        <Border>
                                            <Border.Visibility>
                                                <Binding Path="IsLoading" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <BooleanToVisibilityConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Border.Visibility>
                                            <ContentPresenter Content="{TemplateBinding LoadingContent}" ContentSource="LoadingContent"/>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" SourceName="PART_Editor" Value="">
                            <Setter Property="Visibility" TargetName="PART_Watermark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="PART_Icon" Value="Left"/>
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="PART_Icon" Value="Right"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="BtnStyleAddNew" TargetType="{x:Type Button}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderNew">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF1B2133"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderNew">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF555960"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderNew">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF1B2133"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="borderNew" CornerRadius="19" Background="#FF1B2133">
                <Grid>
                    <Rectangle x:Name="NewIco" Width="18" Height="18" HorizontalAlignment="Left" Margin="7.5,0,0,0">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="/Resources/IconAddNew.png" Stretch="Uniform"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <ContentPresenter x:Name="contentPresenterNew" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="41,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <ControlTemplate x:Key="BtnStyleAddNew2" TargetType="{x:Type Button}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderNew">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF292F37"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderNew">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF555960"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderNew">
                                <EasingColorKeyFrame KeyTime="0" Value="#FF292F37"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="borderNew" CornerRadius="19" Width="auto" Background="#FF292F37">
                <Grid>
                    <Rectangle x:Name="NewIco" Width="18" Height="18" HorizontalAlignment="Left" Margin="7.5,0,0,0">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="/Resources/IconAddNew.png" Stretch="Uniform"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <ContentPresenter x:Name="contentPresenterNew" Focusable="False" HorizontalAlignment="Center" Margin="35,0,10,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>